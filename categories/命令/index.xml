<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>命令 on 遇见&amp;博客</title>
        <link>https://yj.al/categories/%E5%91%BD%E4%BB%A4/</link>
        <description>Recent content in 命令 on 遇见&amp;博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>DeepSeaHappy</copyright>
        <lastBuildDate>Wed, 03 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yj.al/categories/%E5%91%BD%E4%BB%A4/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Git常用命令</title>
        <link>https://yj.al/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Wed, 03 Sep 2025 00:00:00 +0000</pubDate>
        
        <guid>https://yj.al/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
        <description>&lt;img src="https://yj.al/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/roman-synkevych-E-V6EMtGSUU-unsplash.jpg" alt="Featured image of post Git常用命令" /&gt;&lt;p&gt;最常用：&lt;/p&gt;
&lt;h3 id=&#34;以下是一些最常用最基础的-git-命令它们能帮助你完成绝大部分日常开发任务&#34;&gt;以下是一些最常用、最基础的 Git 命令，它们能帮助你完成绝大部分日常开发任务。
&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&#34;入门与配置&#34;&gt;&lt;strong&gt;入门与配置&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在当前目录&lt;strong&gt;创建一个新的 Git 仓库&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git clone [url]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;克隆&lt;/strong&gt;一个远程仓库到本地。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git config --global user.name &amp;quot;[name]&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为你的所有本地仓库设置你的&lt;strong&gt;用户名&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git config --global user.email &amp;quot;[email address]&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为你的所有本地仓库设置你的&lt;strong&gt;邮箱地址&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;文件状态与提交&#34;&gt;&lt;strong&gt;文件状态与提交&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看&lt;/strong&gt;当前仓库的状态，哪些文件被修改了，哪些是新的，哪些待提交。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git add [file]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将指定文件&lt;strong&gt;添加到暂存区&lt;/strong&gt;（staging area），准备提交。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将所有修改过的和新创建的文件&lt;strong&gt;全部添加到暂存区&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git commit -m &amp;quot;[message]&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提交&lt;/strong&gt;暂存区中的文件，并附上提交信息。这是将更改永久保存到历史记录中的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;分支操作&#34;&gt;&lt;strong&gt;分支操作&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;列出&lt;/strong&gt;所有本地分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git branch [branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;创建&lt;/strong&gt;一个新分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git checkout [branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;切换&lt;/strong&gt;到指定分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git checkout -b [new-branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个新分支并立即&lt;strong&gt;切换&lt;/strong&gt;到该分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git merge [branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将指定分支的更改&lt;strong&gt;合并&lt;/strong&gt;到当前分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;远程仓库&#34;&gt;&lt;strong&gt;远程仓库&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git remote add origin [url]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;关联&lt;/strong&gt;一个远程仓库，并将其命名为 &lt;code&gt;origin&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git push -u origin [branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将本地分支&lt;strong&gt;推送到&lt;/strong&gt;远程仓库，并建立跟踪关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将本地更改&lt;strong&gt;推送到&lt;/strong&gt;远程仓库（在建立跟踪关系后使用）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从远程仓库&lt;strong&gt;拉取&lt;/strong&gt;最新更改并自动合并。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;查看历史记录&#34;&gt;&lt;strong&gt;查看历史记录&lt;/strong&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看&lt;/strong&gt;提交历史。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git log --oneline&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以&lt;strong&gt;简洁的单行&lt;/strong&gt;模式查看提交历史。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git diff&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看&lt;/strong&gt;工作区和暂存区之间的差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git diff --staged&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看&lt;/strong&gt;暂存区和最新提交之间的差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;掌握这些命令，你就能应对日常的大部分 Git 工作了。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
