[{"content":"一、环境准备 1.安装go https://go.dev/doc/install\n2.安装Git https://git-scm.com/downloads\n3.下载Hugo最新版 hugo_extended_withdeploy_0.150.0_windows-amd64.zip #注意下载extended_withdeploy版本\n4.配置Git绑定github 1 2 git config --global user.name \u0026#34;Github用户名\u0026#34; git config --global user.email \u0026#34;Github邮箱\u0026#34; 5.生成rsa密钥 1 ssh-keygen -t rsa -C \u0026#34;Github邮箱\u0026#34; 6.进入Github后台ssh绑定rsa密钥并验证 1 ssh -T git@github.com 7.临时代理 1 export ALL_PROXY=\u0026#34;socks5://127.0.0.1:10808\u0026#34; 二、开始安装 1. 进入hugo.exe目录，新建网站blog2 1 hugo new site blog2 2.进入blog2目录 1 cd blog2 3.在当前目录中初始化一个空的 Git 仓库 1 git init 4.将 [PaperMod] 主题克隆到 themes 目录中，将其作为 Git 子模块添加到您的项目中 1 git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 5.向网站配置文件中添加一行，指明当前主题。 1 echo \u0026#34;theme = \u0026#39;PaperMod\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 6.启动 Hugo 的开发服务器以查看网站 1 hugo server -D 三、添加内容 1.添加新页面到您的网站 1 hugo new content content/posts/my-first-post.md 2.Hugo 在 content/posts 目录中创建了文件。用您的编辑器打开该文件 1 2 3 4 5 6 7 8 9 10 --- title: 中文测试 description: 这是一篇杂谈 date: 2025-09-26 slug: Vercel部署Hugo image: helena-hertz-wWZzXlDpMog-unsplash.jpg categories: - 中文 - 随笔 --- 请注意 draft 中的值在 front matter 中是 true 。默认情况下，Hugo 在构建网站时不会发布草稿内容。了解更多关于 草稿、未来和过期内容 的信息。\n3.在帖子的正文中添加一些 Markdown，但不要更改 draft 的值。 1 2 3 4 5 6 7 8 9 10 +++ title = \u0026#39;My First Post\u0026#39; date = 2024-01-14T07:07:07+01:00 draft = true +++ ## Introduction This is **bold** text, and this is *emphasized* text. 这是**粗体**文本，这是*强调*文本。 Visit the [Hugo](https://gohugo.io) website! 4.保存文件，然后启动Hugo的开发服务器以查看网站。您可以使用以下任一命令来包含草稿内容。 1 2 hugo server --buildDrafts hugo server -D 四、部署到Github 1.发布网站(-D带草稿发布) 1 hugo -D 2.进入public目录 1 cd public 3.此目录新建git仓库 1 git init 4.将所有修改过的和新创建的文件全部添加到暂存区 1 git add . 5.提交暂存区中的文件，并附上提交信息。这是将更改永久保存到历史记录中的操作。 1 git commit -m \u0026#34;[message]\u0026#34; 6.关联一个远程仓库，并将其命名为 origin 1 git remote add origin [url] 7.将本地分支推送到远程仓库，并建立跟踪关系。 1 git push -u origin [branch-name] 快速推送已追踪关系 1 git push ","date":"2025-09-25T00:00:00Z","image":"https://yj.al/posts/%E9%83%A8%E7%BD%B2hugo/thought-catalog-505eectW54k-unsplash_hu_c4bc7778cbe17370.jpg","permalink":"https://yj.al/posts/%E9%83%A8%E7%BD%B2hugo/","title":"Vercel部署Hugo博客"},{"content":"VIM常用命令速查 Vim是一款功能强大、高效的文本编辑器，但其学习曲线相对陡峭。本文旨在汇总Vim的常用命令，帮助初学者快速上手，也为熟练使用者提供一个方便的速查表。\n一、移动光标 命令 说明 h j k l 左、下、上、右移动一个字符 w W 向前移动一个单词（以非字母数字字符为界）/向前移动一个单词（以空格为界） b B 向后移动一个单词（以非字母数字字符为界）/向后移动一个单词（以空格为界） e E 移动到下一个单词末尾（以非字母数字字符为界）/移动到下一个单词末尾（以空格为界） $ 移动到行尾 ^ 移动到行首的第一个非空字符 0 移动到行首 gg 移动到文件开头 G 移动到文件结尾 Ctrl + f 向前翻一页 Ctrl + b 向后翻一页 行号 + G 移动到指定的行 % 匹配括号跳转（() [] {}） 二、插入模式（从普通模式切换到插入模式） 命令 说明 i 在当前光标位置前插入 I 在当前行首插入 a 在当前光标位置后插入 A 在当前行尾插入 o 在当前行下方新建一行并进入插入模式 O 在当前行上方新建一行并进入插入模式 提示： 从插入模式回到普通模式，只需按 Esc 键。\n三、编辑和删除 命令 说明 x 删除光标所在字符 dd 删除光标所在行 dw 删除光标所在单词 D 删除从光标到行尾的所有内容 yy 复制光标所在行 p 在光标所在行下方粘贴 P 在光标所在行上方粘贴 u 撤销上一次操作 Ctrl + r 重做上一次撤销的操作 . 重复上一次的修改操作 四、查找和替换 命令 说明 /text 向前查找 text ?text 向后查找 text n 在查找结果中移动到下一个匹配项 N 在查找结果中移动到上一个匹配项 :s/old/new/ 替换当前行第一个匹配的 old 为 new :s/old/new/g 替换当前行所有匹配的 old 为 new :%s/old/new/g 替换文件所有匹配的 old 为 new :%s/old/new/gc 替换文件所有匹配的 old 为 new，并在每次替换前询问确认 五、保存与退出 命令 说明 :w 保存文件 :q 退出Vim :wq 保存并退出 :x 保存并退出（与 :wq 相似） :q! 不保存强制退出 :w filename 另存为 filename 六、分屏操作 命令 说明 :sp filename 水平分割窗口并打开文件 :vsp filename 垂直分割窗口并打开文件 Ctrl + w + w 在分割的窗口间切换 Ctrl + w + q 关闭当前窗口 Ctrl + w + c 关闭当前窗口 七、可视化模式 命令 说明 v 进入字符可视化模式 V 进入行可视化模式 Ctrl + v 进入块可视化模式 y 复制选中的内容 d 删除选中的内容 c 删除选中内容并进入插入模式 希望这份速查表能帮助你更好地掌握Vim，提高编辑效率。勤加练习，你将发现Vim的魅力！\n","date":"2025-09-20T00:00:00Z","image":"https://yj.al/posts/vim/ladislav-sh-Y9ENVevooIc-unsplash_hu_1a7930ceaf98074e.jpg","permalink":"https://yj.al/posts/vim/","title":"Vim命令"},{"content":"Markdown 博客格式化终极指南 ✍️ 你好！准备好让你的博客文章格式变得既专业又高效了吗？\nMarkdown 是一种轻量级标记语言，让你能够使用易于阅读和编写的纯文本格式来撰写文档，然后将其转换为结构化的 HTML。这篇指南将涵盖从基础到高级的所有技巧，助你轻松掌握 Markdown，提升写作体验和文章可读性。让我们开始吧！\n一、基础文本格式化 这些是构建文章内容的基本元素。\n1. 标题 (Headings) 使用 # 创建标题，一个 # 为一级标题，六个 # 为六级标题。为了 SEO 和文章结构清晰，建议每篇文章只使用一个一级标题 (#)。\n1 2 3 4 # 这是一级标题 (文章主标题) ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 2. 强调 (Emphasis) 通过强调文本来吸引读者的注意力。\n粗体：用于特别重要的关键词。 斜体：用于术语、引用或突出显示的词语。 删除线：用于表示已修正或不再相关的内容。 1 2 3 4 5 6 7 8 9 10 *这是斜体文本* _这也是斜体文本_ **这是粗体文本** __这也是粗体文本__ ***这是粗斜体文本*** ___这也是粗斜体文本___ ~~这是一个删除线文本~~ 3. 段落与换行 (Paragraphs \u0026amp; Line Breaks) 新段落：在两行文本之间保留一个空行即可创建一个新段落。 强制换行：如果希望在不开始新段落的情况下换行，请在行末添加两个或更多空格。 1 2 3 4 5 6 7 这是第一行。 这是同一段落的第二行。 这是新段落的第一行。 这是第一行。 这是紧接着的第二行（强制换行）。 二、内容组织与结构 使用这些元素来组织你的内容，使其更具逻辑性和可读性。\n4. 列表 (Lists) 无序列表 (Unordered List) 使用 -、* 或 + 创建无序列表。通过缩进可以创建子列表。\n1 2 3 4 - 项目一 - 项目二 - 子项目 A - 子项目 B 有序列表 (Ordered List) 使用数字加 . 创建有序列表。Markdown 会自动处理数字顺序。\n1 2 3 4 5 1. 第一步 2. 第二步 1. 详细步骤 A 2. 详细步骤 B 3. 第三步 5. 任务列表 (Task Lists) 非常适合用于展示待办事项或步骤清单。\n1 2 3 - [x] 已完成的任务 - [ ] 待办任务 - [ ] 另一个待办任务 6. 引用 (Blockquotes) 使用 \u0026gt; 来引用他人的话、书籍内容或突出显示某段引言。可以嵌套使用。\n1 2 3 \u0026gt; “学如逆水行舟，不进则退。” \u0026gt; \u0026gt; \u0026gt; 这是一个嵌套引用，用于补充说明。 7. 分割线 (Horizontal Rules) 使用三个或更多的 ---、*** 或 ___ 来创建一条水平分割线，用于在视觉上分隔内容区域。\n1 --- 三、链接与多媒体 🔗 8. 链接 (Links) 链接是博客文章中不可或缺的元素。\n内嵌式链接 (Inline Links) 这是最常见的链接形式。\n1 欢迎访问我的 [个人博客](https://example.com \u0026#34;博客标题\u0026#34;)。 引用式链接 (Reference Links) 当你在文章中多次引用同一个链接时，这种方式能让原文更整洁。\n1 2 3 4 这是一个 [引用链接][1] 的例子，这里是 [另一个][2]。 [1]: https://example.com \u0026#34;示例网站\u0026#34; [2]: https://anothersite.com \u0026#34;另一个网站\u0026#34; 自动链接 (Automatic Links) 大部分 Markdown 渲染器会自动将 URL 和邮箱地址转换为可点击的链接。\n1 2 https://google.com user@example.com 9. 图片 (Images) 图片语法与链接非常相似，只是在前面多一个感叹号 !。替代文本 (Alt text) 对 SEO 和可访问性至关重要。\n1 ![替代文本：一只可爱的小猫](https://example.com/image.png \u0026#34;图片标题\u0026#34;) 同样可以使用引用式：\n1 2 3 ![替代文本][logo] [logo]: https://example.com/logo.png \u0026#34;网站 Logo\u0026#34; 四、代码与技术展示 💻 10. 行内代码 (Inline Code) 使用反引号 ` 包裹简短的代码片段或命令。\n1 在 JavaScript 中，使用 `console.log()` 来打印信息。 11. 代码块 (Code Blocks) 使用三个反引号 ``` 包裹多行代码。强烈建议指定编程语言以获得语法高亮。\n1 2 3 4 5 6 ```python def hello_world(): print(\u0026#34;Hello, World!\u0026#34;) hello_world() ``` 12. 表格 (Tables) 创建结构化的数据表格。使用冒号 : 来控制对齐方式。\n1 2 3 4 | 左对齐 | 居中对齐 | 右对齐 | |:-------|:--------:|-------:| | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 五、高级与扩展语法 这些语法可能不被所有 Markdown 编辑器支持，但在多数现代博客平台上是可用的。\n13. 脚注 (Footnotes) 为文章添加补充说明，让正文保持简洁。\n1 2 3 这是一个带有脚注的句子[^1]。 [^1]: 这是脚注的具体内容。 14. 定义列表 (Definition Lists) 用于解释一系列术语。\n1 2 3 4 5 Markdown : 一种轻量级标记语言。 HTML : 超文本标记语言。 15. 转义字符 (Escaping Characters) 如果你想显示 Markdown 的特殊字符（如 *、#），可以在其前面加上反斜杠 \\。\n1 我想显示一个星号 \\*，而不是让它变成斜体。 16. 内嵌 HTML (Inline HTML) Markdown 是 HTML 的超集，因此你可以直接在其中编写 HTML 代码来实现更复杂的布局（请谨慎使用）。\n1 \u0026lt;p style=\u0026#34;color:red;\u0026#34;\u0026gt;这是一段红色的文字。\u0026lt;/p\u0026gt; 17. 表情符号 (Emoji) 在支持的平台上，可以直接使用 emoji 代码或直接粘贴表情符号。\n1 写作真有趣！ :smile: 😄 恭喜你！现在你已经掌握了 Markdown 的核心语法和高级技巧。通过在你的博客写作中运用这些格式，不仅可以大大提高写作效率，还能让你的文章结构更清晰、更具可读性。现在就动手尝试，享受 Markdown 带来的流畅写作体验吧！\n","date":"2025-09-19T00:00:00Z","image":"https://yj.al/posts/markdown/kate-bezzubets-QyZlJZWavz0-unsplash_hu_a8ead4731f08c864.jpg","permalink":"https://yj.al/posts/markdown/","title":"Markdown用法"},{"content":"最常用：\n以下是一些最常用、最基础的 Git 命令，它们能帮助你完成绝大部分日常开发任务。 入门与配置 git init\n在当前目录创建一个新的 Git 仓库。 git clone [url]\n克隆一个远程仓库到本地。 git config --global user.name \u0026quot;[name]\u0026quot;\n为你的所有本地仓库设置你的用户名。 git config --global user.email \u0026quot;[email address]\u0026quot;\n为你的所有本地仓库设置你的邮箱地址。 文件状态与提交 git status\n查看当前仓库的状态，哪些文件被修改了，哪些是新的，哪些待提交。 git add [file]\n将指定文件添加到暂存区（staging area），准备提交。 git add .\n将所有修改过的和新创建的文件全部添加到暂存区。 git commit -m \u0026quot;[message]\u0026quot;\n提交暂存区中的文件，并附上提交信息。这是将更改永久保存到历史记录中的操作。 分支操作 git branch\n列出所有本地分支。 git branch [branch-name]\n创建一个新分支。 git checkout [branch-name]\n切换到指定分支。 git checkout -b [new-branch-name]\n创建一个新分支并立即切换到该分支。 git merge [branch-name]\n将指定分支的更改合并到当前分支。 远程仓库 git remote add origin [url]\n关联一个远程仓库，并将其命名为 origin。 git push -u origin [branch-name]\n将本地分支推送到远程仓库，并建立跟踪关系。 git push\n将本地更改推送到远程仓库（在建立跟踪关系后使用）。 git pull\n从远程仓库拉取最新更改并自动合并。 查看历史记录 git log\n查看提交历史。 git log --oneline\n以简洁的单行模式查看提交历史。 git diff\n查看工作区和暂存区之间的差异。 git diff --staged\n查看暂存区和最新提交之间的差异。 掌握这些命令，你就能应对日常的大部分 Git 工作了。\n","date":"2025-09-03T00:00:00Z","image":"https://yj.al/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/roman-synkevych-E-V6EMtGSUU-unsplash_hu_e17410eb6fa2bc2a.jpg","permalink":"https://yj.al/posts/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Git常用命令"},{"content":"Linux 目录结构 /：根目录 /root：存放 root 用户的相关文件 /home：存放普通用户的相关文件 /bin：存放常用命令的目录，如 vi、su /sbin：需要一定权限才能使用的命令 /mnt：默认挂载光驱和软驱的目录 /etc：存放配置文件的目录 /var：存放经常变化的文件，如日志和网络连接文件 /boot：存放引导系统启动的相关文件 /usr：安装软件的默认目录，相当于 Windows 下的 Program Files /proc：一个虚拟目录，它是系统内存的映射，用于获取系统信息 /srv：service 的缩写，存放服务启动后需要提取的数据 /sys：Linux 2.6 内核新出现的文件系统 /tmp：存放临时文件的目录 /dev：类似于 Windows 的设备管理器，将所有硬件以文件形式存储 /media：用于临时挂载其他文件系统 /opt：用于额外安装软件，如安装 Oracle 数据库 /selinux：一种安全子系统，用于控制程序访问特定文件 帮助命令 man：获取帮助信息 help：获取 Shell 内置帮助信息 Linux 常用快捷键 Ctrl + L：清屏 Ctrl + Q：退出 Ctrl + C：停止进程 ↑ ↓：查找曾经执行过的命令 Tab：命令补全 目录相关命令 pwd：显示绝对路径 ls：列出目录下文件 -a：显示所有文件（包括隐藏文件） -l：显示详细信息，简写为 ll cd：切换到指定目录 相对路径：./ (当前目录), ../ (上级目录), ~ (主目录) 绝对路径：以 / 开头，唯一的路径 mkdir：创建指定目录 -p：创建多层目录 rmdir：删除空目录 -p：删除多层目录 cp：复制目录或文件 -r：递归复制整个文件夹 mv：移动或重命名文件 rm：删除文件或目录 -f：force，强制执行 -r：recursive，递归执行 -rf：强制递归删除 rm -f *：删除当前目录下所有文件 文件相关命令 touch：创建空文件 echo：输出字符串或变量值，可以搭配重定向符 \u0026gt; 或 \u0026gt;\u0026gt; 将内容存储到文件 cat：查看文件内容，从第一行开始显示 -A：列出特殊字符 -b：列出行号，空白行不算 -n：列出行号，空白行也算 -v：列出一些看不出的特殊字符 more：查看文件内容，一页一页显示 空格键：向下翻一页 Enter：向下翻一行 head：查看文件内容，只看头几行 -n：查看头 n 行 tail：查看文件内容，只查看文件末尾几行 -n：查看末尾 n 行 -f：follow，追踪文件修改，用于查看实时日志 wc：统计指定文本的行数、字数、字节数 stat：查看文件的具体存储信息和时间信息 file：查看文件类型 wget：下载网络文件 -b：后台下载 -P：下载到指定目录 -O：指定文件名 -c：断点续传 --spider：测试下载链接 查找命令 find：查找文件或目录 -name：按文件名称查找 -user：按文件拥有者查找 -size：按文件大小查找（+n 大于, -n 小于, n 等于） grep：在文件内搜索字符串匹配的行并输出 -c：只输出匹配行的计数 -n：显示行号 which：搜索命令所在目录及别名信息 日期命令 date：显示或设置时间 -s：以字符串格式设置时间 date \u0026quot;+%Y%m%d\u0026quot;：显示当前年月日 date \u0026quot;+%Y-%m-%d %H:%M:%S\u0026quot;：显示当前年月日时分秒 进程线程命令 ps：查看系统中所有进程 -a：显示现行终端机下的所有程序 -u：以用户为主的格式显示 -x：显示所有程序 ps -aux | grep xxx：筛选查看指定进程 top：查看系统健康状态 kill：终止某个指定 PID 的服务进程 -9：强制进程立即停止 打包和压缩命令 tar：打包目录 -c：create，生成 .tar 包 -x：extract，解包 .tar 文件 -v：verbose，显示详细信息 -f：file，指定打包后的文件名 -z：打包同时压缩 -C：解压到指定目录 tar -zxvf：解压包 tar -zcvf：打包 zip 和 unzip：压缩和解压缩文件及目录 -r：递归压缩目录 gzip 和 gunzip：压缩和解压缩文件 系统状态检测命令 ifconfig：获取网卡配置和网络状态信息 netstat：显示整个系统目前网络情况 -nplt：查看网络进程 uname：查看系统内核和版本信息 uptime：查看系统负载信息 free：查看当前系统内存使用信息 who：查看当前登录主机的终端信息 last：查看系统登录记录 history：查看历史执行过的命令 关机命令 reboot：重启 poweroff：关闭系统 shutdown：关机 -h：关机 -r：重启 hh:mm：指定 24 小时制的小时和分钟后关机 +m：m 分钟后关机（+1 为默认值，+0 为立刻关机） Yum 常用命令 列出所有可更新的软件清单 yum check-update 更新所有软件 yum update 仅安装指定的软件 yum install \u0026lt;package_name\u0026gt; 仅更新指定的软件 yum update \u0026lt;package_name\u0026gt; 列出所有可安装的软件清单 yum list 删除软件包 yum remove \u0026lt;package_name\u0026gt; 查找软件包 yum search \u0026lt;keyword\u0026gt; 清除缓存 yum clean packages：清除缓存目录下的软件包 ","date":"2025-08-12T00:00:00Z","image":"https://yj.al/posts/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/arian-darvishi-wh-RPfR_3_M-unsplash_hu_6aff0272ff0bc060.jpg","permalink":"https://yj.al/posts/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Linux常用命令记录"},{"content":"母亲走了三十多年了，就埋在村头的老坟地里，她的模样、一举一动就跟在眼前似的。\n母亲啊，一辈子就没闲过，天不亮就起，摸着黑才歇。家里家外操不完的心，穿的永远是洗得发白、补了又补的衣裳。她心善能容人，跟邻里没红过脸，有啥好东西总先紧着别人。\n最让我忘不了的是吃饭，一大家子人围着桌子，母亲从来不上桌，她就在灶台边忙活，等我们都吃完了，她才瞅瞅锅里，剩下了，就扒拉两口，要是没剩，她就不吃了，说不饿。那会儿日子都紧巴，穷富差不了多少，可人心热乎，讲情义，母亲就是那最厚道的一个。她包的饺子，那叫一个香，是穷日子里最盼的念想。\n过年是她最累的时候，洗洗涮涮，准备年饭，累得腰都直不起来，可脸上总挂着笑，看着我们放炮仗那股高兴劲儿，她比我们还乐呵。再破的衣裳，经她的手也给我们拾掇得干干净净。\n那时候还是集体，一年四季都出不到一点新鲜菜，到秋天就要分口粮，白天打下谷子，晚上分给每家每户，这一分就是一个大晚上。农村的秋天还是一个很冷的秋天，母亲身上穿得很薄，粮食分到家以后，母亲这一晚上冻得受不了，她那薄薄的被子围在身上一会儿，天就亮了。母亲一天的辛劳又开始了，她揉揉眼，又得爬起来给一大家子弄吃的。家里人多，那口烧柴火的大铁锅死沉死沉，端上端下，真不是一般人能干的力气活。现在想想，母亲那瘦小的身子，哪来那么大劲儿。\n母亲走的时候才五十出头，是累病的。如今她的坟就在村边，一个不起眼的小土包。每次回村，我总要去那儿站站，跟她说说话。我在城里干了大半辈子苦力，扛水泥、扎钢筋、爬脚手架，手上肩上全是老茧，累是真累。可想想母亲当年端那口大铁锅的劲儿，想想她冻得发抖还咬牙撑到天亮的样子，我这力气就又上来了。母亲没享过福，可她教会我的就是这骨子里的硬气和对家的担当。我得把您撑起来的这个家接着撑下去，撑稳当。\n坟头上的草青了又黄，黄了又青，就像我的念想一样，一年年总也断不了。我已经当了爸爸，也已经当了爷爷，但我已经三十多年没叫过妈妈了。我想着，等哪天我扛不动水泥了，就回村里挨着那堆土躺下，没准那时候我再叫妈妈，她就能听见了。\n","date":"2025-07-09T00:00:00Z","permalink":"https://yj.al/posts/%E6%88%91%E7%9A%84%E6%AF%8D%E4%BA%B2/","title":"我的母亲"}]