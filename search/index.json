[{"content":"最常用：\n以下是一些最常用、最基础的 Git 命令，它们能帮助你完成绝大部分日常开发任务。 入门与配置 git init\n在当前目录创建一个新的 Git 仓库。 git clone [url]\n克隆一个远程仓库到本地。 git config --global user.name \u0026quot;[name]\u0026quot;\n为你的所有本地仓库设置你的用户名。 git config --global user.email \u0026quot;[email address]\u0026quot;\n为你的所有本地仓库设置你的邮箱地址。 文件状态与提交 git status\n查看当前仓库的状态，哪些文件被修改了，哪些是新的，哪些待提交。 git add [file]\n将指定文件添加到暂存区（staging area），准备提交。 git add .\n将所有修改过的和新创建的文件全部添加到暂存区。 git commit -m \u0026quot;[message]\u0026quot;\n提交暂存区中的文件，并附上提交信息。这是将更改永久保存到历史记录中的操作。 分支操作 git branch\n列出所有本地分支。 git branch [branch-name]\n创建一个新分支。 git checkout [branch-name]\n切换到指定分支。 git checkout -b [new-branch-name]\n创建一个新分支并立即切换到该分支。 git merge [branch-name]\n将指定分支的更改合并到当前分支。 远程仓库 git remote add origin [url]\n关联一个远程仓库，并将其命名为 origin。 git push -u origin [branch-name]\n将本地分支推送到远程仓库，并建立跟踪关系。 git push\n将本地更改推送到远程仓库（在建立跟踪关系后使用）。 git pull\n从远程仓库拉取最新更改并自动合并。 查看历史记录 git log\n查看提交历史。 git log --oneline\n以简洁的单行模式查看提交历史。 git diff\n查看工作区和暂存区之间的差异。 git diff --staged\n查看暂存区和最新提交之间的差异。 掌握这些命令，你就能应对日常的大部分 Git 工作了。\n","date":"2025-09-09T00:00:00Z","image":"https://yj.al/p/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/roman-synkevych-E-V6EMtGSUU-unsplash_hu_e17410eb6fa2bc2a.jpg","permalink":"https://yj.al/p/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Git常用命令"},{"content":"linux目录结构 /，根目录 root，存放root用户的相关文件 home，存放普通用户的相关文件 bin，存放常用命令的目录，如vi，su sbin，要具有一定权限才可以使用命令 mnt，默认挂载光驱和软驱的目录 etc，存放配置的相关文件 var，存放经常变化的文件，如网络连接的sock文件 、日志 boot，存放引导系统启动的相关文件 usr，安装一个软件的默认目录，相当于windows下的program files proc，这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息 srv ，service缩写。该目录存放一些服务启动之后需要提取的数据 sys，这是linux2.6内核的一个很大的变化，该目录下安装了2.6内核中新出现的一个文件系统 tmp，这个目录是用来存放一些临时文件的 del，类似于windows的设备管理器，把所有的硬件用文件的形式存储 media，系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里面的内容了。 opt，这是给主机额外安装软件所摆放，如安装oracle数据库就可放到该目录下默认为空。 selinux，selinux是一种安全子系统，它能控制程序只能访问特定文件。 帮助命令 man：获取帮助信息 help：获取shell内置帮助信息 linux常用快捷键 ctrl+l 清屏 ctrl+q 退出 ctrl+c 停止进程 上下键 查找曾经执行过的命令 Tab 命令补全 目录相关命令 pwd 显示绝对路径 ls 列出目录下文件 -a 显示全部文件 -l 简写ll,显示详细信息\ncd 切换到指定目录 相对路径 ./ ../ ~ 绝对路径 以/开头，唯一的路径\nmkdir 创建指定目录 -p 创建多层\nrmdir 删除空目录 -p 删除多层\ncp 复制目录或文件 -r 递归复制整个文件夹\nmv 移动或重命名文件 rm 删除文件或目录 -f：force强制执行 -r：recursive递归执行 -rf：强制递归执行 -f *： 删除所有文件\n文件相关命令 touch 创建空文件 echo 输出字符串或变量值，还可以搭配从定向符将内容存储到文件 cat 查看文件内容，从第一行开始显示 -A：列出特殊字符而非空白 -b：列出行号，空白行不算行号 -n：列出行号，空白行也会有行号 -v：列出一些看不出来的特殊字符\nmore 查看文件内容，一页一页的显示 空格键（space）：向下翻一页 enter：向下翻一行\nhead 查看文件内容，只看头几行 -n：查看头n行\ntail 查看文件内容，只查看文件末尾几行 -n：末尾几行 -f：follow输出文件修改的内容，用于追踪文件修改\nwc 统计指定文本的行数、字数、字节数 stat 查看文件的具体存储信息和时间等信息 file 查看文件类型 wget 下载网络文件 -b：后台下载 -P：下载到指定目录 -O：指定一个文件名 -c：断点续传 -spider：测试下载链接\n查找命令 find 查找文件或目录 -name：按文件名称查找 -user：按文件拥有者查找 -size：根按文件大小查找文件（+n大于，-n小于，n等于）\ngrep 在文件内搜索字符串匹配的行并输出 -c：count只输出匹配行的计数 -n：line-number\nwhich 搜索命令所在目录及别名信息 日期命令 date 显示或设置时间 -s：set 以字符串格式设置时间 +%Y%m%d：显示当前年月日 \u0026ldquo;+%Y-%m-%d %H:%M:%S\u0026rdquo;：显示当前年月日时分秒\n进程线程命令 ps 查看系统中所有进程 -a：显示现行终端机下的所有程序 -u：以用户为主的格式来显示程序状况 -x： 显示所有程序，不以终端机来区分 -aux | grep xxx：筛选查看进程\ntop 查看系统健康状态 kill 终止某个指定pid的服务进程 -9：强迫进程立即停止\n打包和压缩命令 tar 打包目录 -c：create生成.tar打包文件 -x：extract解包.tar文件 -v：verbose显示详细信息 -f：file指定压缩后的文件名 -z：打包同时压缩 -C：解压到指定目录 -zxvf：解压包 -zcvf：打包\nzip和unzip 压缩和解压缩文件和目录 -r：递归压缩目录\ngzip和gunzip 压缩和解压缩文件 系统状态检测命令 ifconfig 获取网卡配置和网络状态信息 netstat 显示整个系统目前网络情况 -nplt 查看网络进程\nuname 查看系统内核和系统版本等信息 uptime 查看系统负载信息 free 查看当前系统内存使用信息 who 查看当前登入主机的终端信息 last 系统登录的记录 history 历史执行过的命令 关机命令 reboot 重启 power off 关闭系统 shutdown 关机 -h：关机 -r：重启 hh:mm：指定24小时制的小时和分钟后关机 +m：m分钟后关机(+1：默认值，1分钟后关机; +0：now，立刻关机)\nyum常用命令 列出所有可更新的软件清单命令 yum check-update\n更新所有软件命令 yum update\n仅安装指定的软件命令 yum install \u0026lt;package_name\u0026gt;\n仅更新指定的软件命令 yum update \u0026lt;package_name\u0026gt;\n列出所有可安裝的软件清单命令 yum list\n删除软件包命令 yum remove \u0026lt;package_name\u0026gt;\n查找软件包命令 yum search 清除缓存命令 yum clean packages: 清除缓存目录下的软件包\n","date":"2025-09-09T00:00:00Z","image":"https://yj.al/p/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/arian-darvishi-wh-RPfR_3_M-unsplash_hu_6aff0272ff0bc060.jpg","permalink":"https://yj.al/p/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Linux常用命令记录"},{"content":"1. 标题 (Headings) 使用 # 进行标题标记，支持1-6级标题。\n一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 2. 强调 (Emphasis) 斜体 (Italic) 使用 * 或 _ 标记斜体。\n斜体文本 或 斜体文本\n粗体 (Bold) 使用 ** 或 __ 标记粗体。\n1 **粗体文本** 或 __粗体文本__ 粗斜体 (Bold Italic) 使用 *** 或 ___ 同时标记粗体和斜体。\n1 ***粗斜体文本*** 或 ___粗斜体文本___ 3. 列表 (Lists) 无序列表 (Unordered List) 使用 -、+ 或 * 标记无序列表。\n1 2 3 4 - 项目1 - 项目2 - 子项目1 - 子项目2 有序列表 (Ordered List) 使用数字加 . 标记有序列表。\n1 2 3 4 1. 项目1 2. 项目2 1. 子项目1 2. 子项目2 4. 链接 (Links) 内嵌链接 (Inline Links) 1 [链接文本](https://example.com) 引用链接 (Reference Links) 1 2 3 这是一个 [引用链接][1] 的例子。 [1]: https://example.com \u0026#34;Example\u0026#34; 5. 图片 (Images) 1 ![替代文本](https://example.com/image.png) 你还可以使用引用链接的方式插入图片。\n1 2 3 ![替代文本][image1] [image1]: https://example.com/image.png \u0026#34;图片标题\u0026#34; 6. 引用 (Blockquotes) 使用 \u0026gt; 表示引用，可以嵌套引用。\n1 2 3 \u0026gt; 这是一个引用。 \u0026gt; \u0026gt; \u0026gt; 这是一个嵌套引用。 7. 代码 (Code) 行内代码 (Inline Code) 使用 ` 包裹行内代码。\n1 这是 `行内代码` 示例。 代码块 (Code Blocks) 使用三个反引号 ``` 表示代码块，可以指定语言用于语法高亮。\n1 2 3 ```python def hello_world(): print(\u0026#34;Hello, World!\u0026#34;) 1 2 3 4 5 6 7 8 ### 8. 表格 (Tables) Markdown 支持简单的表格布局，可以对齐表头。 ```markdown | 左对齐 | 居中对齐 | 右对齐 | |:-------|:--------:|-------:| | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 9. 脚注 (Footnotes) 使用 [^1] 标记脚注，并在文末定义。\n1 2 3 这是一个带有脚注的句子[^1]。 [^1]: 这是脚注的内容。 10. 嵌套元素 (Nested Elements) Markdown 支持元素的嵌套，例如列表中的引用或代码块。\n1 2 3 4 5 1. 列表项包含引用： \u0026gt; 这是一个引用。 2. 列表项包含代码块： ```bash echo \u0026#34;Hello, World!\u0026#34; 1 2 3 4 5 6 ### 11. 任务列表 (Task Lists) 可以创建任务列表，常用于 TODO 清单。 ```markdown - [x] 已完成的任务 - [ ] 待完成的任务 12. 换行 (Line Breaks) 在 Markdown 中，行末使用两个或更多空格可以实现换行。\n1 2 这是第一行。 这是第二行。 13. 转义字符 (Escaping Characters) Markdown 中的特殊字符可以使用反斜杠 \\ 进行转义。\n1 \\*这是被转义的星号\\* 14. 内嵌 HTML (Inline HTML) Markdown 支持嵌入 HTML，但需注意部分平台可能不支持。\n1 \u0026lt;p\u0026gt;This is a paragraph in HTML.\u0026lt;/p\u0026gt; 15. 自动链接 (Automatic Links) 直接输入 URL 或电子邮件地址，会自动转为可点击的链接。\n1 https://example.com 16. 定义列表 (Definition Lists) 虽然不是所有渲染器都支持，但部分 Markdown 扩展支持定义列表。\n1 2 3 4 5 术语 : 定义描述 术语二 : 另一个定义描述 17. 强调 (Strikethrough) 使用 ~~ 包裹文字来表示删除线。\n1 ~~这是一个删除线文本。~~ 18. 分割线 (Horizontal Rules) 使用 ---、*** 或 ___ 创建分割线。\n1 --- 19. 表情符号 (Emoji) 在支持的平台上，可以直接输入表情符号代码，例如 :smile:。\n1 这是一个笑脸 :smile: ","date":"2025-09-09T00:00:00Z","image":"https://yj.al/p/markdown/kate-bezzubets-QyZlJZWavz0-unsplash_hu_a8ead4731f08c864.jpg","permalink":"https://yj.al/p/markdown/","title":"Markdown用法"},{"content":"正文 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2025-09-09T00:00:00Z","image":"https://yj.al/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://yj.al/p/test-chinese/","title":"中文杂谈"}]